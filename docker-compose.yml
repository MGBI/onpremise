# NOTE: This docker-compose.yml is meant to be just an example of how
# you could accomplish this on your own. It is not intended to work in
# all use-cases and must be adapted to fit your needs. This is merely
# a guideline.

# See docs.getsentry.com/on-premise/server/ for full
# instructions

version: '2'

volumes:
  postgres-data:
  sentry-data:

x-defaults: &defaults
  restart: unless-stopped
  image: ${PUBLIC_REPOSITORY}/${SENTRY_IMAGE}
  depends_on:
    - redis
    - postgres
    - memcached
  env_file: .env
  environment:
    SENTRY_MEMCACHED_HOST: memcached
    SENTRY_REDIS_HOST: redis
    SENTRY_POSTGRES_HOST: postgres
  volumes:
    - sentry-data:/var/lib/sentry/files


services:
  memcached:
    restart: unless-stopped
    image: memcached:1.5-alpine

  redis:
    restart: unless-stopped
    image: redis:3.2-alpine

  postgres:
    restart: unless-stopped
    image: postgres:9.5
    environment:
      POSTGRES_DB: ${SENTRY_DB_NAME}
      POSTGRES_USER: ${SENTRY_DB_USER}
      POSTGRES_PASSWORD: ${SENTRY_DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data

  web:
    <<: *defaults
    ports:
      - '9000:9000'

  cron:
    <<: *defaults
    command: run cron

  worker:
    <<: *defaults
    command: run worker
